{"ast":null,"code":"/**\r\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\r\n *\r\n * @example\r\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\r\n *      return [1000, 5000, 10000][tries - 1] || 10000\r\n *    })\r\n *    reconnectTimer.scheduleTimeout() // fires after 1000\r\n *    reconnectTimer.scheduleTimeout() // fires after 5000\r\n *    reconnectTimer.reset()\r\n *    reconnectTimer.scheduleTimeout() // fires after 1000\r\n */\nexport default class Timer {\n  constructor(callback, timerCalc) {\n    this.callback = callback;\n    this.timerCalc = timerCalc;\n    this.timer = undefined;\n    this.tries = 0;\n    this.callback = callback;\n    this.timerCalc = timerCalc;\n  }\n  reset() {\n    this.tries = 0;\n    clearTimeout(this.timer);\n  }\n  // Cancels any previous scheduleTimeout and schedules callback\n  scheduleTimeout() {\n    clearTimeout(this.timer);\n    this.timer = setTimeout(() => {\n      this.tries = this.tries + 1;\n      this.callback();\n    }, this.timerCalc(this.tries + 1));\n  }\n}","map":{"version":3,"names":["Timer","constructor","callback","timerCalc","timer","undefined","tries","reset","clearTimeout","scheduleTimeout","setTimeout"],"sources":["C:/Users/jclon/chatgptVcp/Ionic-vcp-macbook27mars22024/node_modules/@supabase/realtime-js/dist/module/lib/timer.js"],"sourcesContent":["/**\r\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\r\n *\r\n * @example\r\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\r\n *      return [1000, 5000, 10000][tries - 1] || 10000\r\n *    })\r\n *    reconnectTimer.scheduleTimeout() // fires after 1000\r\n *    reconnectTimer.scheduleTimeout() // fires after 5000\r\n *    reconnectTimer.reset()\r\n *    reconnectTimer.scheduleTimeout() // fires after 1000\r\n */\r\nexport default class Timer {\r\n    constructor(callback, timerCalc) {\r\n        this.callback = callback;\r\n        this.timerCalc = timerCalc;\r\n        this.timer = undefined;\r\n        this.tries = 0;\r\n        this.callback = callback;\r\n        this.timerCalc = timerCalc;\r\n    }\r\n    reset() {\r\n        this.tries = 0;\r\n        clearTimeout(this.timer);\r\n    }\r\n    // Cancels any previous scheduleTimeout and schedules callback\r\n    scheduleTimeout() {\r\n        clearTimeout(this.timer);\r\n        this.timer = setTimeout(() => {\r\n            this.tries = this.tries + 1;\r\n            this.callback();\r\n        }, this.timerCalc(this.tries + 1));\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMA,KAAK,CAAC;EACvBC,WAAWA,CAACC,QAAQ,EAAEC,SAAS,EAAE;IAC7B,IAAI,CAACD,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,KAAK,GAAGC,SAAS;IACtB,IAAI,CAACC,KAAK,GAAG,CAAC;IACd,IAAI,CAACJ,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC9B;EACAI,KAAKA,CAAA,EAAG;IACJ,IAAI,CAACD,KAAK,GAAG,CAAC;IACdE,YAAY,CAAC,IAAI,CAACJ,KAAK,CAAC;EAC5B;EACA;EACAK,eAAeA,CAAA,EAAG;IACdD,YAAY,CAAC,IAAI,CAACJ,KAAK,CAAC;IACxB,IAAI,CAACA,KAAK,GAAGM,UAAU,CAAC,MAAM;MAC1B,IAAI,CAACJ,KAAK,GAAG,IAAI,CAACA,KAAK,GAAG,CAAC;MAC3B,IAAI,CAACJ,QAAQ,CAAC,CAAC;IACnB,CAAC,EAAE,IAAI,CAACC,SAAS,CAAC,IAAI,CAACG,KAAK,GAAG,CAAC,CAAC,CAAC;EACtC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}