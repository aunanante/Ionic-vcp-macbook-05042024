{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/jclon/chatgptVcp/Ionic-vcp-macbook27mars22024/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/services/user.service\";\nimport * as i4 from \"@ionic/angular\";\nimport * as i5 from \"@angular/common\";\nfunction UpdateBusinessOwnerModalPage_img_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 21);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵproperty(\"src\", (tmp_0_0 = ctx_r0.businessOwnerForm.get(\"image_owner\")) == null ? null : tmp_0_0.value, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction UpdateBusinessOwnerModalPage_ion_icon_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-icon\", 22);\n  }\n}\nexport class UpdateBusinessOwnerModalPage {\n  constructor(route, router, formBuilder, userService, alertController) {\n    this.route = route;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.userService = userService;\n    this.alertController = alertController;\n    this.myFile = null; // Variable to store the selected file\n    this.route.queryParams.subscribe(params => {\n      this.businessOwnerForm = this.formBuilder.group({\n        email: [{\n          value: params['email'],\n          disabled: true\n        }],\n        name: [params['name'], Validators.required],\n        adresse: [params['adresse']],\n        telephone1: [params['telephone1']],\n        telephone2: [params['telephone2']],\n        image_owner: [params['image_owner']],\n        monthly_fee_paid: [{\n          value: params['monthly_fee_paid'],\n          disabled: true\n        }]\n      });\n    });\n  }\n  onCancel() {\n    this.router.navigate(['/dashboard/user']);\n  }\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method\n  ngOnInit() {}\n  addPhoto(event) {\n    const file = event.target.files[0];\n    console.log('Selected File:', file);\n    // Assign the URL of the selected file to the image_owner field\n    const imageUrl = URL.createObjectURL(file);\n    this.businessOwnerForm.patchValue({\n      image_owner: imageUrl\n    });\n    // Store the file for later use in the onUpdate method\n    this.myFile = file;\n  }\n  onUpdate() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // Extract necessary fields from the form\n      const {\n        email,\n        monthly_fee_paid,\n        ...updatedFields\n      } = _this.businessOwnerForm.value;\n      // Retrieve the current email from the query parameters\n      const queryParams = yield _this.route.snapshot.queryParams;\n      const currentEmail = queryParams['email'];\n      // Fetch the existing business owner based on the current email\n      const existingBusinessOwner = yield _this.userService.getBusinessOwnersByEmail(currentEmail);\n      if (existingBusinessOwner.length === 0) {\n        console.error('Business owner not found');\n        return;\n      }\n      // Get the first (and only) existing business owner\n      const originalBusinessOwner = existingBusinessOwner[0];\n      // Check if a file has been selected\n      if (_this.myFile) {\n        // Upload the file to the storage bucket\n        const imageUrl = yield _this.userService.uploadImage(_this.myFile);\n        if (imageUrl) {\n          // Update the image_owner field with the URL of the uploaded image\n          updatedFields['image_owner'] = imageUrl;\n        } else {\n          // Handle error if upload fails\n          console.error('Failed to upload image');\n          const alert = yield _this.alertController.create({\n            header: 'Upload Failed',\n            message: 'Failed to upload image.',\n            buttons: ['OK']\n          });\n          yield alert.present();\n          return;\n        }\n      }\n      // Check for updated fields\n      const updatedFieldsKeys = Object.keys(updatedFields);\n      const changedFields = updatedFieldsKeys.filter(key => originalBusinessOwner[key] !== updatedFields[key]);\n      // If no fields have been updated, show alert and return\n      if (changedFields.length === 0) {\n        yield _this.showNoChangesAlert();\n        return;\n      }\n      // Merge the updated fields with the existing business owner data\n      const updatedBusinessOwner = {\n        ...originalBusinessOwner,\n        ...updatedFields\n      };\n      console.log('updatedBusinessOwner', updatedBusinessOwner);\n      // Update the business owner\n      const updated = yield _this.userService.updateBusinessOwner(updatedBusinessOwner);\n      if (updated) {\n        // Handle success\n        console.log('Business owner updated successfully');\n        yield _this.showSuccessAlert();\n        _this.router.navigate(['/dashboard/user']);\n      } else {\n        // Handle error\n        console.error('Failed to update business owner');\n        const alert = yield _this.alertController.create({\n          header: 'Update Failed',\n          message: 'Failed to update business owner.',\n          buttons: ['OK']\n        });\n        yield alert.present();\n      }\n    })();\n  }\n  showSuccessAlert() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const alert = yield _this2.alertController.create({\n        header: 'Success',\n        message: 'Business owner updated successfully.',\n        buttons: ['OK']\n      });\n      yield alert.present();\n    })();\n  }\n  showNoChangesAlert() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const alert = yield _this3.alertController.create({\n        header: 'No Changes',\n        message: 'No fields have been updated.',\n        buttons: ['OK']\n      });\n      yield alert.present();\n    })();\n  }\n  onDelete() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const email = _this4.businessOwnerForm.get('email')?.value;\n      if (!email) {\n        console.error('No email found for the current user');\n        return;\n      }\n      const confirmAlert = yield _this4.alertController.create({\n        header: 'Confirm Deletion',\n        message: 'Are you sure you want to delete this business owner?',\n        buttons: [{\n          text: 'Cancel',\n          role: 'cancel',\n          handler: () => {\n            console.log('Delete cancelled');\n          }\n        }, {\n          text: 'Delete',\n          handler: function () {\n            var _ref = _asyncToGenerator(function* () {\n              const deleted = yield _this4.userService.deleteBusinessOwnerByEmail(email);\n              if (deleted) {\n                console.log('Business owner deleted successfully');\n                yield _this4.showDeleteSuccessAlert();\n                // After successful deletion, navigate back to the user page\n                _this4.router.navigate(['/dashboard/user']);\n              } else {\n                console.error('Failed to delete business owner');\n                const errorAlert = yield _this4.alertController.create({\n                  header: 'Deletion Failed',\n                  message: 'Failed to delete business owner.',\n                  buttons: ['OK']\n                });\n                yield errorAlert.present();\n              }\n            });\n            return function handler() {\n              return _ref.apply(this, arguments);\n            };\n          }()\n        }]\n      });\n      yield confirmAlert.present();\n    })();\n  }\n  showDeleteSuccessAlert() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const alert = yield _this5.alertController.create({\n        header: 'Success',\n        message: 'Business owner deleted successfully.',\n        buttons: ['OK']\n      });\n      yield alert.present();\n    })();\n  }\n  static #_ = this.ɵfac = function UpdateBusinessOwnerModalPage_Factory(t) {\n    return new (t || UpdateBusinessOwnerModalPage)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.AlertController));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateBusinessOwnerModalPage,\n    selectors: [[\"app-update-business-owner-modal\"]],\n    decls: 54,\n    vars: 3,\n    consts: [[\"slot\", \"start\"], [\"defaultHref\", \"/dashboard/user\", \"text\", \"\"], [3, \"click\"], [\"slot\", \"end\"], [3, \"formGroup\", \"ngSubmit\"], [\"size\", \"12\", 1, \"column-center\"], [1, \"circle\"], [\"class\", \"contact-image\", 3, \"src\", 4, \"ngIf\"], [\"name\", \"person-circle-outline\", \"class\", \"contact-icon\", 4, \"ngIf\"], [\"size\", \"4\"], [\"size\", \"4\", 1, \"column-center\"], [\"expand\", \"block\", 3, \"click\"], [\"type\", \"file\", \"accept\", \"image/png, image/jpeg\", 2, \"display\", \"none\", 3, \"change\"], [\"fileInput\", \"\"], [\"position\", \"stacked\"], [\"formControlName\", \"name\", \"type\", \"text\"], [\"formControlName\", \"adresse\", \"type\", \"text\"], [\"formControlName\", \"telephone1\", \"type\", \"tel\"], [\"formControlName\", \"telephone2\", \"type\", \"tel\"], [\"formControlName\", \"image_owner\", \"readonly\", \"\"], [\"color\", \"danger\", \"expand\", \"block\", 3, \"click\"], [1, \"contact-image\", 3, \"src\"], [\"name\", \"person-circle-outline\", 1, \"contact-icon\"]],\n    template: function UpdateBusinessOwnerModalPage_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"ion-toolbar\")(1, \"ion-buttons\", 0);\n        i0.ɵɵelement(2, \"ion-back-button\", 1);\n        i0.ɵɵelementStart(3, \"ion-button\", 2);\n        i0.ɵɵlistener(\"click\", function UpdateBusinessOwnerModalPage_Template_ion_button_click_3_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵtext(4, \"Cancel\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"ion-title\");\n        i0.ɵɵtext(6, \"Update Business Owner\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"ion-buttons\", 3)(8, \"ion-button\", 2);\n        i0.ɵɵlistener(\"click\", function UpdateBusinessOwnerModalPage_Template_ion_button_click_8_listener() {\n          return ctx.onUpdate();\n        });\n        i0.ɵɵtext(9, \"Update\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"ion-content\")(11, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateBusinessOwnerModalPage_Template_form_ngSubmit_11_listener() {\n          return ctx.onUpdate();\n        });\n        i0.ɵɵelementStart(12, \"ion-grid\")(13, \"ion-row\")(14, \"ion-col\", 5)(15, \"div\", 6);\n        i0.ɵɵtemplate(16, UpdateBusinessOwnerModalPage_img_16_Template, 1, 1, \"img\", 7)(17, UpdateBusinessOwnerModalPage_ion_icon_17_Template, 1, 0, \"ion-icon\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"ion-row\");\n        i0.ɵɵelement(19, \"ion-col\", 9);\n        i0.ɵɵelementStart(20, \"ion-col\", 10)(21, \"ion-button\", 11);\n        i0.ɵɵlistener(\"click\", function UpdateBusinessOwnerModalPage_Template_ion_button_click_21_listener() {\n          i0.ɵɵrestoreView(_r3);\n          const _r2 = i0.ɵɵreference(24);\n          return i0.ɵɵresetView(_r2.click());\n        });\n        i0.ɵɵtext(22, \"Add Photo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"input\", 12, 13);\n        i0.ɵɵlistener(\"change\", function UpdateBusinessOwnerModalPage_Template_input_change_23_listener($event) {\n          return ctx.addPhoto($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(25, \"ion-col\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"ion-row\")(27, \"ion-row\")(28, \"ion-row\")(29, \"ion-row\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"ion-item\")(31, \"ion-label\", 14);\n        i0.ɵɵtext(32, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"ion-input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"ion-item\")(35, \"ion-label\", 14);\n        i0.ɵɵtext(36, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"ion-input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"ion-item\")(39, \"ion-label\", 14);\n        i0.ɵɵtext(40, \"Telephone 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(41, \"ion-input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"ion-item\")(43, \"ion-label\", 14);\n        i0.ɵɵtext(44, \"Telephone 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(45, \"ion-input\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"ion-item\")(47, \"ion-label\");\n        i0.ɵɵtext(48, \"Owner Image :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(49, \"ion-input\", 19);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(50, \"ion-footer\")(51, \"ion-toolbar\")(52, \"ion-button\", 20);\n        i0.ɵɵlistener(\"click\", function UpdateBusinessOwnerModalPage_Template_ion_button_click_52_listener() {\n          return ctx.onDelete();\n        });\n        i0.ɵɵtext(53, \"Delete\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"formGroup\", ctx.businessOwnerForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.businessOwnerForm.get(\"image_owner\")) == null ? null : tmp_1_0.value);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !((tmp_2_0 = ctx.businessOwnerForm.get(\"image_owner\")) == null ? null : tmp_2_0.value));\n      }\n    },\n    dependencies: [i5.NgIf, i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i4.IonButton, i4.IonButtons, i4.IonCol, i4.IonContent, i4.IonFooter, i4.IonGrid, i4.IonIcon, i4.IonInput, i4.IonItem, i4.IonLabel, i4.IonRow, i4.IonTitle, i4.IonToolbar, i4.TextValueAccessor, i4.IonBackButton, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelement","ɵɵproperty","tmp_0_0","ctx_r0","businessOwnerForm","get","value","ɵɵsanitizeUrl","UpdateBusinessOwnerModalPage","constructor","route","router","formBuilder","userService","alertController","myFile","queryParams","subscribe","params","group","email","disabled","name","required","adresse","telephone1","telephone2","image_owner","monthly_fee_paid","onCancel","navigate","ngOnInit","addPhoto","event","file","target","files","console","log","imageUrl","URL","createObjectURL","patchValue","onUpdate","_this","_asyncToGenerator","updatedFields","snapshot","currentEmail","existingBusinessOwner","getBusinessOwnersByEmail","length","error","originalBusinessOwner","uploadImage","alert","create","header","message","buttons","present","updatedFieldsKeys","Object","keys","changedFields","filter","key","showNoChangesAlert","updatedBusinessOwner","updated","updateBusinessOwner","showSuccessAlert","_this2","_this3","onDelete","_this4","confirmAlert","text","role","handler","_ref","deleted","deleteBusinessOwnerByEmail","showDeleteSuccessAlert","errorAlert","apply","arguments","_this5","_","ɵɵdirectiveInject","i1","ActivatedRoute","Router","i2","FormBuilder","i3","UserService","i4","AlertController","_2","selectors","decls","vars","consts","template","UpdateBusinessOwnerModalPage_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","UpdateBusinessOwnerModalPage_Template_ion_button_click_3_listener","ɵɵtext","ɵɵelementEnd","UpdateBusinessOwnerModalPage_Template_ion_button_click_8_listener","UpdateBusinessOwnerModalPage_Template_form_ngSubmit_11_listener","ɵɵtemplate","UpdateBusinessOwnerModalPage_img_16_Template","UpdateBusinessOwnerModalPage_ion_icon_17_Template","UpdateBusinessOwnerModalPage_Template_ion_button_click_21_listener","ɵɵrestoreView","_r3","_r2","ɵɵreference","ɵɵresetView","click","UpdateBusinessOwnerModalPage_Template_input_change_23_listener","$event","UpdateBusinessOwnerModalPage_Template_ion_button_click_52_listener","ɵɵadvance","tmp_1_0","tmp_2_0"],"sources":["C:\\Users\\jclon\\chatgptVcp\\Ionic-vcp-macbook27mars22024\\src\\app\\pages\\update-business-owner-modal\\update-business-owner-modal.page.ts","C:\\Users\\jclon\\chatgptVcp\\Ionic-vcp-macbook27mars22024\\src\\app\\pages\\update-business-owner-modal\\update-business-owner-modal.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-update-business-owner-modal',\r\n  templateUrl: './update-business-owner-modal.page.html',\r\n  styleUrls: ['./update-business-owner-modal.page.scss'],\r\n})\r\nexport class UpdateBusinessOwnerModalPage implements OnInit {\r\n  businessOwnerForm!: FormGroup;\r\n  myFile: File | null = null; // Variable to store the selected file\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private userService: UserService,\r\n    private alertController: AlertController\r\n  ) {\r\n    this.route.queryParams.subscribe((params: { [key: string]: any }) => {\r\n      this.businessOwnerForm = this.formBuilder.group({\r\n        email: [{ value: params['email'], disabled: true }],\r\n        name: [params['name'], Validators.required],\r\n        adresse: [params['adresse']],\r\n        telephone1: [params['telephone1']],\r\n        telephone2: [params['telephone2']],\r\n        image_owner: [params['image_owner']],\r\n        monthly_fee_paid: [\r\n          { value: params['monthly_fee_paid'], disabled: true },\r\n        ],\r\n      });\r\n    });\r\n  }\r\n\r\n  onCancel() {\r\n    this.router.navigate(['/dashboard/user']);\r\n  }\r\n\r\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method\r\n  ngOnInit() {}\r\n\r\n  addPhoto(event: any) {\r\n    const file = event.target.files[0];\r\n    console.log('Selected File:', file);\r\n    \r\n    // Assign the URL of the selected file to the image_owner field\r\n    const imageUrl = URL.createObjectURL(file);\r\n    this.businessOwnerForm.patchValue({\r\n      image_owner: imageUrl\r\n    });\r\n  \r\n    // Store the file for later use in the onUpdate method\r\n    this.myFile = file;\r\n  }\r\n  \r\n\r\n  async onUpdate() {\r\n    // Extract necessary fields from the form\r\n    const { email, monthly_fee_paid, ...updatedFields } = this.businessOwnerForm.value;\r\n  \r\n    // Retrieve the current email from the query parameters\r\n    const queryParams = await this.route.snapshot.queryParams;\r\n    const currentEmail = queryParams['email'];\r\n  \r\n    // Fetch the existing business owner based on the current email\r\n    const existingBusinessOwner = await this.userService.getBusinessOwnersByEmail(currentEmail);\r\n  \r\n    if (existingBusinessOwner.length === 0) {\r\n      console.error('Business owner not found');\r\n      return;\r\n    }\r\n  \r\n    // Get the first (and only) existing business owner\r\n    const originalBusinessOwner = existingBusinessOwner[0];\r\n\r\n    // Check if a file has been selected\r\n    if (this.myFile) {\r\n      // Upload the file to the storage bucket\r\n      const imageUrl = await this.userService.uploadImage(this.myFile);\r\n      if (imageUrl) {\r\n        // Update the image_owner field with the URL of the uploaded image\r\n        updatedFields['image_owner'] = imageUrl;\r\n      } else {\r\n        // Handle error if upload fails\r\n        console.error('Failed to upload image');\r\n        const alert = await this.alertController.create({\r\n          header: 'Upload Failed',\r\n          message: 'Failed to upload image.',\r\n          buttons: ['OK']\r\n        });\r\n        await alert.present();\r\n        return;\r\n      }\r\n    }\r\n  \r\n    // Check for updated fields\r\n    const updatedFieldsKeys = Object.keys(updatedFields);\r\n    const changedFields = updatedFieldsKeys.filter(key => originalBusinessOwner[key] !== updatedFields[key]);\r\n  \r\n    // If no fields have been updated, show alert and return\r\n    if (changedFields.length === 0) {\r\n      await this.showNoChangesAlert();\r\n      return;\r\n    }\r\n  \r\n    // Merge the updated fields with the existing business owner data\r\n    const updatedBusinessOwner = { ...originalBusinessOwner, ...updatedFields };\r\n  \r\n    console.log('updatedBusinessOwner', updatedBusinessOwner);\r\n    // Update the business owner\r\n    const updated = await this.userService.updateBusinessOwner(updatedBusinessOwner);\r\n  \r\n    if (updated) {\r\n      // Handle success\r\n      console.log('Business owner updated successfully');\r\n      await this.showSuccessAlert();\r\n      this.router.navigate(['/dashboard/user']);\r\n    } else {\r\n      // Handle error\r\n      console.error('Failed to update business owner');\r\n      const alert = await this.alertController.create({\r\n        header: 'Update Failed',\r\n        message: 'Failed to update business owner.',\r\n        buttons: ['OK']\r\n      });\r\n      await alert.present();\r\n    }\r\n  } \r\n\r\n  async showSuccessAlert() {\r\n    const alert = await this.alertController.create({\r\n      header: 'Success',\r\n      message: 'Business owner updated successfully.',\r\n      buttons: ['OK']\r\n    });\r\n    await alert.present();\r\n  }\r\n  \r\n  async showNoChangesAlert() {\r\n    const alert = await this.alertController.create({\r\n      header: 'No Changes',\r\n      message: 'No fields have been updated.',\r\n      buttons: ['OK']\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  async onDelete() {\r\n    const email = this.businessOwnerForm.get('email')?.value;\r\n    \r\n    if (!email) {\r\n      console.error('No email found for the current user');\r\n      return;\r\n    }\r\n  \r\n    const confirmAlert = await this.alertController.create({\r\n      header: 'Confirm Deletion',\r\n      message: 'Are you sure you want to delete this business owner?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            console.log('Delete cancelled');\r\n          }\r\n        },\r\n        { \r\n          text: 'Delete',\r\n          handler: async () => {\r\n            const deleted = await this.userService.deleteBusinessOwnerByEmail(email);\r\n            if (deleted) {\r\n              console.log('Business owner deleted successfully');\r\n              await this.showDeleteSuccessAlert();\r\n              // After successful deletion, navigate back to the user page\r\n              this.router.navigate(['/dashboard/user']);\r\n            } else {\r\n              console.error('Failed to delete business owner');\r\n              const errorAlert = await this.alertController.create({\r\n                header: 'Deletion Failed',\r\n                message: 'Failed to delete business owner.',\r\n                buttons: ['OK']\r\n              });\r\n              await errorAlert.present();\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    });\r\n  \r\n    await confirmAlert.present();\r\n  }\r\n  \r\n  async showDeleteSuccessAlert() {\r\n    const alert = await this.alertController.create({\r\n      header: 'Success',\r\n      message: 'Business owner deleted successfully.',\r\n      buttons: ['OK']\r\n    });\r\n    await alert.present();\r\n  }\r\n  \r\n  \r\n}\r\n","<ion-toolbar>\r\n  <ion-buttons slot=\"start\">\r\n    <ion-back-button defaultHref=\"/dashboard/user\" text=\"\"></ion-back-button>\r\n    <ion-button (click)=\"onCancel()\">Cancel</ion-button>\r\n  </ion-buttons>\r\n  <ion-title>Update Business Owner</ion-title>\r\n  <ion-buttons slot=\"end\">\r\n    <ion-button (click)=\"onUpdate()\">Update</ion-button>\r\n  </ion-buttons>\r\n</ion-toolbar>\r\n\r\n<ion-content>\r\n  <form [formGroup]=\"businessOwnerForm\" (ngSubmit)=\"onUpdate()\">\r\n    <ion-grid>\r\n      <!-- Row 1 -->\r\n      <ion-row>\r\n        <!-- Column 1 -->\r\n        <ion-col size=\"12\" class=\"column-center\">\r\n          <!-- Adjusted size to 12 to occupy the entire row -->\r\n          <div class=\"circle\">\r\n            <img\r\n              [src]=\"businessOwnerForm.get('image_owner')?.value\"\r\n              class=\"contact-image\"\r\n              *ngIf=\"businessOwnerForm.get('image_owner')?.value\"\r\n            />\r\n            <ion-icon\r\n              name=\"person-circle-outline\"\r\n              class=\"contact-icon\"\r\n              *ngIf=\"!businessOwnerForm.get('image_owner')?.value\"\r\n            ></ion-icon>\r\n          </div>\r\n        </ion-col>\r\n      </ion-row>\r\n\r\n      <!-- Row 2 -->\r\n      <ion-row>\r\n        <!-- Column 1 -->\r\n        <ion-col size=\"4\"></ion-col>\r\n        <!-- Column 2 -->\r\n        <ion-col size=\"4\" class=\"column-center\">\r\n          <ion-button expand=\"block\" (click)=\"fileInput.click()\"\r\n            >Add Photo</ion-button\r\n          >\r\n          <input\r\n            #fileInput\r\n            type=\"file\"\r\n            accept=\"image/png, image/jpeg\"\r\n            (change)=\"addPhoto($event)\"\r\n            style=\"display: none\"\r\n          />\r\n        </ion-col>\r\n        <!-- Column 3 -->\r\n        <ion-col size=\"4\"></ion-col>\r\n      </ion-row>\r\n\r\n      <ion-row> </ion-row>\r\n      <ion-row> </ion-row>\r\n      <ion-row> </ion-row>\r\n      <ion-row></ion-row>\r\n    </ion-grid>\r\n    <ion-item>\r\n      <ion-label position=\"stacked\">Name</ion-label>\r\n      <ion-input formControlName=\"name\" type=\"text\"></ion-input>\r\n    </ion-item>\r\n    <ion-item>\r\n      <ion-label position=\"stacked\">Address</ion-label>\r\n      <ion-input formControlName=\"adresse\" type=\"text\"></ion-input>\r\n    </ion-item>\r\n    <ion-item>\r\n      <ion-label position=\"stacked\">Telephone 1</ion-label>\r\n      <ion-input formControlName=\"telephone1\" type=\"tel\"></ion-input>\r\n    </ion-item>\r\n    <ion-item>\r\n      <ion-label position=\"stacked\">Telephone 2</ion-label>\r\n      <ion-input formControlName=\"telephone2\" type=\"tel\"></ion-input>\r\n    </ion-item>\r\n    <ion-item>\r\n      <ion-label>Owner Image :</ion-label>\r\n      <ion-input formControlName=\"image_owner\" readonly></ion-input>\r\n    </ion-item>\r\n    <!-- Add other form fields here -->\r\n    <!-- <ion-button type=\"submit\" expand=\"block\">Update</ion-button> -->\r\n  </form>\r\n</ion-content>\r\n\r\n<ion-footer>\r\n  <ion-toolbar>\r\n    <ion-button color=\"danger\" expand=\"block\" (click)=\"onDelete()\">Delete</ion-button>\r\n  </ion-toolbar>\r\n</ion-footer>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}