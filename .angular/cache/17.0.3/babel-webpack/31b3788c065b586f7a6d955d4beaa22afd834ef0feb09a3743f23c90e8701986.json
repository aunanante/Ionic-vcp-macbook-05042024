{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/jclon/chatgptVcp/Ionic-vcp-macbook27mars22024/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { createClient } from '@supabase/supabase-js';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nexport class DetailService {\n  constructor() {\n    this.supabase = createClient(environment.supabaseUrl, environment.supabaseKey);\n  }\n  getDetailsByProductId(productId) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const {\n          data,\n          error\n        } = yield _this.supabase.from('details').select('*').eq('product_id', productId);\n        if (error) {\n          throw error;\n        }\n        return data || [];\n      } catch (error) {\n        console.error('Error fetching details by product ID:', error);\n        throw error;\n      }\n    })();\n  }\n  getDetailById(detailId) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const {\n          data,\n          error\n        } = yield _this2.supabase.from('details').select('*').eq('id', detailId).single();\n        if (error) {\n          throw error;\n        }\n        return data || null;\n      } catch (error) {\n        console.error('Error fetching detail by ID:', error);\n        throw error;\n      }\n    })();\n  }\n  addDetail(detailData) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const {\n          data,\n          error\n        } = yield _this3.supabase.from('details').insert([detailData]).select('*');\n        if (error) {\n          throw error;\n        }\n        return data[0] || null;\n      } catch (error) {\n        console.error('Error adding detail:', error);\n        throw error;\n      }\n    })();\n  }\n  updateDetail(detailId, detailData) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Attempt to update the detail in the database\n        const {\n          error\n        } = yield _this4.supabase.from('details').update(detailData).eq('id', detailId);\n        if (error) {\n          console.error('Error updating detail:', error.message);\n          return false; // Return false in case of error\n        } else {\n          console.log('Detail updated successfully.');\n          return true; // Return true if the update was successful\n        }\n      } catch (error) {\n        console.error('Error updating detail:', error.message);\n        return false; // Return false in case of error\n      }\n    })();\n  }\n\n  deleteDetail(detailId) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const {\n          error\n        } = yield _this5.supabase.from('details').delete().eq('id', detailId);\n        if (error) {\n          console.error('Error deleting detail:', error.message);\n          return false;\n        } else {\n          console.log('Detail deleted successfully.');\n          return true;\n        }\n      } catch (error) {\n        console.error('Error deleting detail:', error.message);\n        return false;\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function DetailService_Factory(t) {\n    return new (t || DetailService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DetailService,\n    factory: DetailService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["createClient","environment","DetailService","constructor","supabase","supabaseUrl","supabaseKey","getDetailsByProductId","productId","_this","_asyncToGenerator","data","error","from","select","eq","console","getDetailById","detailId","_this2","single","addDetail","detailData","_this3","insert","updateDetail","_this4","update","message","log","deleteDetail","_this5","delete","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jclon\\chatgptVcp\\Ionic-vcp-macbook27mars22024\\src\\app\\services\\detail.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { createClient, SupabaseClient } from '@supabase/supabase-js';\r\nimport { environment } from '../../environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DetailService {\r\n\r\n  private supabase: SupabaseClient;\r\n\r\n  constructor() {\r\n    this.supabase = createClient(environment.supabaseUrl, environment.supabaseKey);\r\n  }\r\n\r\n  async getDetailsByProductId(productId: number): Promise<any[]> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('details')\r\n        .select('*')\r\n        .eq('product_id', productId);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data || [];\r\n    } catch (error) {\r\n      console.error('Error fetching details by product ID:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getDetailById(detailId: number): Promise<any> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('details')\r\n        .select('*')\r\n        .eq('id', detailId)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data || null;\r\n    } catch (error) {\r\n      console.error('Error fetching detail by ID:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async addDetail(detailData: any): Promise<any> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('details')\r\n        .insert([detailData])\r\n        .select('*');\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data[0] || null;\r\n    } catch (error) {\r\n      console.error('Error adding detail:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateDetail(detailId: number, detailData: any): Promise<boolean> {\r\n    try {\r\n      // Attempt to update the detail in the database\r\n      const { error } = await this.supabase\r\n        .from('details')\r\n        .update(detailData)\r\n        .eq('id', detailId);\r\n\r\n      if (error) {\r\n        console.error('Error updating detail:', error.message);\r\n        return false; // Return false in case of error\r\n      } else {\r\n        console.log('Detail updated successfully.');\r\n        return true; // Return true if the update was successful\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error updating detail:', error.message);\r\n      return false; // Return false in case of error\r\n    }\r\n  }\r\n\r\n  async deleteDetail(detailId: number): Promise<boolean> {\r\n    try {\r\n      const { error } = await this.supabase\r\n        .from('details')\r\n        .delete()\r\n        .eq('id', detailId);\r\n\r\n      if (error) {\r\n        console.error('Error deleting detail:', error.message);\r\n        return false;\r\n      } else {\r\n        console.log('Detail deleted successfully.');\r\n        return true;\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error deleting detail:', error.message);\r\n      return false;\r\n    }\r\n  }\r\n  \r\n}\r\n"],"mappings":";AACA,SAASA,YAAY,QAAwB,uBAAuB;AACpE,SAASC,WAAW,QAAQ,gCAAgC;;AAM5D,OAAM,MAAOC,aAAa;EAIxBC,YAAA;IACE,IAAI,CAACC,QAAQ,GAAGJ,YAAY,CAACC,WAAW,CAACI,WAAW,EAAEJ,WAAW,CAACK,WAAW,CAAC;EAChF;EAEMC,qBAAqBA,CAACC,SAAiB;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC3C,IAAI;QACF,MAAM;UAAEC,IAAI;UAAEC;QAAK,CAAE,SAASH,KAAI,CAACL,QAAQ,CACxCS,IAAI,CAAC,SAAS,CAAC,CACfC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,YAAY,EAAEP,SAAS,CAAC;QAE9B,IAAII,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb,OAAOD,IAAI,IAAI,EAAE;OAClB,CAAC,OAAOC,KAAK,EAAE;QACdI,OAAO,CAACJ,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;QAC7D,MAAMA,KAAK;;IACZ;EACH;EAEMK,aAAaA,CAACC,QAAgB;IAAA,IAAAC,MAAA;IAAA,OAAAT,iBAAA;MAClC,IAAI;QACF,MAAM;UAAEC,IAAI;UAAEC;QAAK,CAAE,SAASO,MAAI,CAACf,QAAQ,CACxCS,IAAI,CAAC,SAAS,CAAC,CACfC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,EAAEG,QAAQ,CAAC,CAClBE,MAAM,EAAE;QAEX,IAAIR,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb,OAAOD,IAAI,IAAI,IAAI;OACpB,CAAC,OAAOC,KAAK,EAAE;QACdI,OAAO,CAACJ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD,MAAMA,KAAK;;IACZ;EACH;EAEMS,SAASA,CAACC,UAAe;IAAA,IAAAC,MAAA;IAAA,OAAAb,iBAAA;MAC7B,IAAI;QACF,MAAM;UAAEC,IAAI;UAAEC;QAAK,CAAE,SAASW,MAAI,CAACnB,QAAQ,CACxCS,IAAI,CAAC,SAAS,CAAC,CACfW,MAAM,CAAC,CAACF,UAAU,CAAC,CAAC,CACpBR,MAAM,CAAC,GAAG,CAAC;QAEd,IAAIF,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb,OAAOD,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI;OACvB,CAAC,OAAOC,KAAK,EAAE;QACdI,OAAO,CAACJ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C,MAAMA,KAAK;;IACZ;EACH;EAEMa,YAAYA,CAACP,QAAgB,EAAEI,UAAe;IAAA,IAAAI,MAAA;IAAA,OAAAhB,iBAAA;MAClD,IAAI;QACF;QACA,MAAM;UAAEE;QAAK,CAAE,SAASc,MAAI,CAACtB,QAAQ,CAClCS,IAAI,CAAC,SAAS,CAAC,CACfc,MAAM,CAACL,UAAU,CAAC,CAClBP,EAAE,CAAC,IAAI,EAAEG,QAAQ,CAAC;QAErB,IAAIN,KAAK,EAAE;UACTI,OAAO,CAACJ,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACgB,OAAO,CAAC;UACtD,OAAO,KAAK,CAAC,CAAC;SACf,MAAM;UACLZ,OAAO,CAACa,GAAG,CAAC,8BAA8B,CAAC;UAC3C,OAAO,IAAI,CAAC,CAAC;;OAEhB,CAAC,OAAOjB,KAAU,EAAE;QACnBI,OAAO,CAACJ,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACgB,OAAO,CAAC;QACtD,OAAO,KAAK,CAAC,CAAC;;IACf;EACH;;EAEME,YAAYA,CAACZ,QAAgB;IAAA,IAAAa,MAAA;IAAA,OAAArB,iBAAA;MACjC,IAAI;QACF,MAAM;UAAEE;QAAK,CAAE,SAASmB,MAAI,CAAC3B,QAAQ,CAClCS,IAAI,CAAC,SAAS,CAAC,CACfmB,MAAM,EAAE,CACRjB,EAAE,CAAC,IAAI,EAAEG,QAAQ,CAAC;QAErB,IAAIN,KAAK,EAAE;UACTI,OAAO,CAACJ,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACgB,OAAO,CAAC;UACtD,OAAO,KAAK;SACb,MAAM;UACLZ,OAAO,CAACa,GAAG,CAAC,8BAA8B,CAAC;UAC3C,OAAO,IAAI;;OAEd,CAAC,OAAOjB,KAAU,EAAE;QACnBI,OAAO,CAACJ,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACgB,OAAO,CAAC;QACtD,OAAO,KAAK;;IACb;EACH;EAAC,QAAAK,CAAA,G;qBAtGU/B,aAAa;EAAA;EAAA,QAAAgC,EAAA,G;WAAbhC,aAAa;IAAAiC,OAAA,EAAbjC,aAAa,CAAAkC,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}