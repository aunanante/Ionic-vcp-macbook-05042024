{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/jclon/chatgptVcp/Ionic-vcp-macbook27mars22024/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { createClient } from '@supabase/supabase-js';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nexport class ProductService {\n  constructor() {\n    this.supabase = createClient(environment.supabaseUrl, environment.supabaseKey);\n  }\n  getProductsByCategoryId(categoryId) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const {\n          data,\n          error\n        } = yield _this.supabase.from('products').select('*').eq('category_id', categoryId);\n        if (error) {\n          throw error;\n        }\n        return data || [];\n      } catch (error) {\n        console.error('Error fetching products:', error);\n        return [];\n      }\n    })();\n  }\n  getProductById(productId) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const {\n          data,\n          error\n        } = yield _this2.supabase.from('products').select('*').eq('id', productId).single();\n        if (error) {\n          throw error;\n        }\n        return data;\n      } catch (error) {\n        console.error('Error fetching product:', error);\n        return null;\n      }\n    })();\n  }\n  addProduct(formData) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Insert the new product into the 'products' table and then select the inserted row\n        const {\n          data: insertedProduct,\n          error\n        } = yield _this3.supabase.from('products').insert([{\n          productname: formData.productname,\n          reference: formData.reference,\n          price: formData.price,\n          description: formData.description,\n          image_product: formData.image_product,\n          business_owner_id: formData.business_owner_id,\n          ville_id: formData.ville_id,\n          commerce_id: formData.commerce_id,\n          category_id: formData.category_id\n        }]).select('*');\n        if (error) {\n          console.error('Error adding product:', error.message);\n          return null;\n        }\n        if (insertedProduct && insertedProduct.length > 0) {\n          console.log('Product added successfully:', insertedProduct[0]);\n          return insertedProduct[0];\n        } else {\n          console.error('Failed to add product:', insertedProduct);\n          return null;\n        }\n      } catch (error) {\n        console.error('Error adding product:', error.message);\n        return null;\n      }\n    })();\n  }\n  updateProduct(productId, formData) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Attempt to update the product in the database\n        const {\n          error\n        } = yield _this4.supabase.from('products').update(formData).eq('id', productId);\n        if (error) {\n          console.error('Error updating product:', error.message);\n          return false; // Return false in case of error\n        } else {\n          console.log('Product updated successfully.');\n          return true; // Return true if the update was successful\n        }\n      } catch (error) {\n        console.error('Error updating product:', error.message);\n        return false; // Return false in case of error\n      }\n    })();\n  }\n\n  deleteProduct(productId) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Attempt to delete the product from the database\n        const {\n          error\n        } = yield _this5.supabase.from('products').delete().eq('id', productId);\n        if (error) {\n          console.error('Error deleting product:', error.message);\n          return false; // Return false in case of error\n        } else {\n          console.log('Product deleted successfully.');\n          return true; // Return true if the deletion was successful\n        }\n      } catch (error) {\n        console.error('Error deleting product:', error.message);\n        return false; // Return false in case of error\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["createClient","environment","ProductService","constructor","supabase","supabaseUrl","supabaseKey","getProductsByCategoryId","categoryId","_this","_asyncToGenerator","data","error","from","select","eq","console","getProductById","productId","_this2","single","addProduct","formData","_this3","insertedProduct","insert","productname","reference","price","description","image_product","business_owner_id","ville_id","commerce_id","category_id","message","length","log","updateProduct","_this4","update","deleteProduct","_this5","delete","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jclon\\chatgptVcp\\Ionic-vcp-macbook27mars22024\\src\\app\\services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { createClient, SupabaseClient } from '@supabase/supabase-js';\r\nimport { environment } from '../../environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  private supabase: SupabaseClient;\r\n\r\n  constructor() {\r\n    this.supabase = createClient(environment.supabaseUrl, environment.supabaseKey);\r\n  }\r\n\r\n  async getProductsByCategoryId(categoryId: number): Promise<any[]> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('products')\r\n        .select('*')\r\n        .eq('category_id', categoryId);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data || [];\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async getProductById(productId: number): Promise<any | null> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('products')\r\n        .select('*')\r\n        .eq('id', productId)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching product:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async addProduct(formData: any): Promise<any> {\r\n    try {\r\n      // Insert the new product into the 'products' table and then select the inserted row\r\n      const { data: insertedProduct, error } = await this.supabase.from('products').insert([\r\n        {\r\n          productname: formData.productname,\r\n          reference: formData.reference,\r\n          price: formData.price,\r\n          description: formData.description,\r\n          image_product: formData.image_product,\r\n          business_owner_id: formData.business_owner_id,\r\n          ville_id: formData.ville_id,\r\n          commerce_id: formData.commerce_id,\r\n          category_id: formData.category_id\r\n        }\r\n      ]).select('*');\r\n  \r\n      if (error) {\r\n        console.error('Error adding product:', error.message);\r\n        return null;\r\n      }\r\n  \r\n      if (insertedProduct && insertedProduct.length > 0) {\r\n        console.log('Product added successfully:', insertedProduct[0]);\r\n        return insertedProduct[0];\r\n      } else {\r\n        console.error('Failed to add product:', insertedProduct);\r\n        return null;\r\n      }\r\n      \r\n    } catch (error : any) {\r\n      console.error('Error adding product:', error.message);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async updateProduct(productId: number, formData: any): Promise<boolean> {\r\n    try {\r\n      // Attempt to update the product in the database\r\n      const { error } = await this.supabase\r\n        .from('products')\r\n        .update(formData)\r\n        .eq('id', productId);\r\n\r\n      if (error) {\r\n        console.error('Error updating product:', error.message);\r\n        return false; // Return false in case of error\r\n      } else {\r\n        console.log('Product updated successfully.');\r\n        return true; // Return true if the update was successful\r\n      }\r\n    } catch (error : any) {\r\n      console.error('Error updating product:', error.message);\r\n      return false; // Return false in case of error\r\n    }\r\n  }\r\n\r\n  async deleteProduct(productId: number): Promise<boolean> {\r\n    try {\r\n      // Attempt to delete the product from the database\r\n      const { error } = await this.supabase\r\n        .from('products')\r\n        .delete()\r\n        .eq('id', productId);\r\n\r\n      if (error) {\r\n        console.error('Error deleting product:', error.message);\r\n        return false; // Return false in case of error\r\n      } else {\r\n        console.log('Product deleted successfully.');\r\n        return true; // Return true if the deletion was successful\r\n      }\r\n    } catch (error : any) {\r\n      console.error('Error deleting product:', error.message);\r\n      return false; // Return false in case of error\r\n    }\r\n  }\r\n  \r\n} \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}